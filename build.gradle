plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'cn.afternode'
version = '1.0.0'

allprojects {
    plugins.apply("kotlin")

    configurations {
        include
        implementation.extendsFrom(include)
    }

    repositories {
        mavenCentral()
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
    }

    dependencies {
        compileOnly "org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    }
}

subprojects {
    group = "cn.afternode.gencore"
    version = parent.version

    dependencies {
        if (!project.name.endsWith("utils")) include project(":utils")
    }
}

dependencies {
    include project(":utils")
    include project(":database")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
    options.encoding = "UTF-8"
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    configurations = [project.configurations.include]
}
